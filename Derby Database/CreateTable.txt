CREATE TABLE EMPLOYEELIST( 
EMPID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1001, Increment by 1),
POSITION VARCHAR(20) NOT NULL,
EMPUSERNAME VARCHAR(100) NOT NULL,
EMPNAME VARCHAR(100) NOT NULL,
EMPPWD VARCHAR(100) NOT NULL,
EMPCRDATE TIMESTAMP NOT NULL,
EMPCRBY VARCHAR(100) NOT NULL,
EMPUPDATE TIMESTAMP NOT NULL,
EMPUPBY VARCHAR(100) NOT NULL,
EMPHP VARCHAR(20) NOT NULL,
EMPEMAIL VARCHAR(50) NOT NULL,
EMPSTATUS VARCHAR(10) NOT NULL
);

CREATE TABLE PRODCATEGORY(
PRODCATID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1), 
PRODCATNAME VARCHAR(100) NOT NULL,
PRODCATDESC VARCHAR(100) NOT NULL,
PRODCATCRDATE TIMESTAMP NOT NULL,
PRODCATCRBY VARCHAR(100) NOT NULL,
PRODCATUPDATE TIMESTAMP NOT NULL,
PRODCATUPBY VARCHAR(100) NOT NULL,
PRODCAT_STATUS VARCHAR(10) NOT NULL,
ISDELETED BOOLEAN NOT NULL
);

CREATE TABLE PRODUCTLIST(
PRODID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1001, Increment by 1), 
PRODCATID INTEGER NOT NULL,
PRODNAME VARCHAR(100) NOT NULL,
PRODCRDATE TIMESTAMP NOT NULL,
PRODCRBY VARCHAR(100) NOT NULL,
PRODUPDATE TIMESTAMP NOT NULL,
PRODUPBY VARCHAR(100) NOT NULL,
prodDesc VARCHAR(999) NOT NULL,
PRODMANUAL VARCHAR(999) NOT NULL,
PRODINGREDIENTS VARCHAR(999) NOT NULL,
PRODAVAILABLE_QTY INTEGER NOT NULL,
DISCOUNT INTEGER,
PROD_ORIPRICE DOUBLE NOT NULL,
PROD_FINALPRICE DOUBLE NOT NULL,
PROD_STATUS VARCHAR(10) NOT NULL,
ISDELETED BOOLEAN NOT NULL,
FOREIGN KEY (PRODCATID) REFERENCES PRODCATEGORY(PRODCATID)
);

CREATE TABLE prodImage(
PRODIMGID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 0001, Increment by 1),
PRODID INTEGER NOT NULL, 
PRODIMGCRDATE TIMESTAMP NOT NULL,
PRODIMGCRBY VARCHAR(100) NOT NULL,
PRODIMGUPDATE TIMESTAMP NOT NULL,
PRODIMGUPBY VARCHAR(100) NOT NULL,
PRODIMG BLOB NOT NULL,
PRODIMG_STATUS VARCHAR(10) NOT NULL,
FOREIGN KEY (PRODID) REFERENCES PRODUCTLIST(PRODID)
);

----------------------------------

CREATE TABLE customerList( 
CUSTID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 100001, Increment by 1), 
CUSTUSERNAME VARCHAR(100) NOT NULL,
CUSTNAME VARCHAR(100) NOT NULL,
CUSTPWD VARCHAR(100) NOT NULL,
CUSTEMAIL VARCHAR(50) NOT NULL,
CUSTHP VARCHAR(20) NOT NULL,
CUSTCRDATE TIMESTAMP NOT NULL,
CUSTCRBY VARCHAR(100) NOT NULL,
CUSTUPDATE TIMESTAMP NOT NULL,
CUSTUPBY VARCHAR(100) NOT NULL,
CUST_STATUS VARCHAR(10) NOT NULL
);

CREATE TABLE addressList(
ADDRESSID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 100001, Increment by 1),
CUSTID INTEGER NOT NULL,
ADDR_TYPE varchar(20) NOT NULL,
ADDR_STATE varchar(20) NOT NULL,
TOWN VARCHAR(30) NOT NULL,
ZIPCODE CHAR(5) NOT NULL,
addr_Details VARCHAR(100) NOT NULL,
receiverName VARCHAR(100) NOT NULL,
receiverHp VARCHAR(20) NOT NULL,
ADDR_STATUS VARCHAR(20) NOT NULL,
FOREIGN KEY (CUSTID) REFERENCES CUSTOMERLIST(CUSTID) 
);

CREATE TABLE cart(
CARTID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1001, Increment by 1),
CUSTID INTEGER NOT NULL,
CARTUPDATE TIMESTAMP NOT NULL, 
FOREIGN KEY (CUSTID) REFERENCES CUSTOMERLIST(CUSTID)
);

CREATE TABLE cartDetail(
CARTDETAILID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 10001, Increment by 1),
CARTID INTEGER NOT NULL,
PRODID INTEGER NOT NULL,
CARTDETAILQTY INTEGER NOT NULL, 
FOREIGN KEY (CARTID) REFERENCES CART(CARTID),
FOREIGN KEY (PRODID) REFERENCES PRODUCTLIST(PRODID)
);

CREATE TABLE wishItem(
WISHID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 10001, Increment by 1),
CUSTID INTEGER NOT NULL,
PRODID INTEGER NOT NULL,
FOREIGN KEY (CUSTID) REFERENCES CUSTOMERLIST(CUSTID),
FOREIGN KEY (PRODID) REFERENCES PRODUCTLIST(PRODID)
);

CREATE TABLE ORDERS(
ORDERROW INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 100001, Increment by 1),
ORDERNO VARCHAR(30) NOT NULL,
CUSTID INTEGER NOT NULL,
ORDERCRDATE TIMESTAMP NOT NULL,
ORDERCRBY VARCHAR(100) NOT NULL,
ORDERUPDATE TIMESTAMP NOT NULL,
ORDERUPBY VARCHAR(100) NOT NULL,
ORDERTTLAMT DOUBLE NOT NULL,
TRACKINGNO VARCHAR(30),
ORDER_STATUS VARCHAR(20) NOT NULL,
FOREIGN KEY (CUSTID) REFERENCES CUSTOMERLIST(CUSTID)
);

CREATE TABLE orderDetails(
ORDERDETAILID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 10001, Increment by 1),
ORDERROW INT NOT NULL,
PRODID INTEGER NOT NULL,
ORDQTY INTEGER NOT NULL, 
ORDPRICE DOUBLE NOT NULL,
ORDDECRDATE TIMESTAMP NOT NULL,
ORDERCRBY VARCHAR(100) NOT NULL,
ORDERUPDATE TIMESTAMP NOT NULL,
ORDERUPBY VARCHAR(100) NOT NULL,
FOREIGN KEY (ORDERROW) REFERENCES ORDERS(ORDERROW),
FOREIGN KEY (PRODID) REFERENCES PRODUCTLIST(PRODID)

);

CREATE TABLE deliveryStatus(
DELIVERYID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1),
ORDERROW INT NOT NULL,
ADDRESSID INTEGER NOT NULL,
DELIVERYSTATUS VARCHAR(20) NOT NULL,
DELIVERYDETAILS VARCHAR(100) NOT NULL,
DEL_CRDATE TIMESTAMP NOT NULL,
DEL_CRBY VARCHAR(100) NOT NULL,
DEL_UPDATE TIMESTAMP NOT NULL,
DEL_UPBY  VARCHAR(100) NOT NULL,
FOREIGN KEY (ORDERROW) REFERENCES ORDERS(ORDERROW),
FOREIGN KEY (ADDRESSID) REFERENCES ADDRESSLIST(ADDRESSID)

);

CREATE TABLE payment(
PAYMENTID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1),
ORDERROW INT NOT NULL,
PAYMENTAMOUNT DOUBLE NOT NULL,
DELIVERYFEE DOUBLE NOT NULL,
PAYMENTMETHOD VARCHAR(20) NOT NULL,
PAYMENTDATE TIMESTAMP NOT NULL,
TRANSACTION_ID VARCHAR(30) NOT NULL,
IS_DELETED BOOLEAN NOT NULL,
FOREIGN KEY (ORDERROW) REFERENCES ORDERS(ORDERROW)
);


